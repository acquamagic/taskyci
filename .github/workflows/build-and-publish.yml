# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build, Push to Docker Hub, and Deploy to EKS
on:
    push:
        branches: [main]
    workflow_dispatch:
      inputs:
        IMAGE_TAG:
          description: 'Docker image tag to deploy (e.g., 1.4, latest)'
          required: true
          default: 'latest'    
          
env:   
    IMAGE_NAME: cicd
    IMAGE_TAG: ${{ inputs.IMAGE_TAG }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    AWS_REGION: ${{ secrets.AWS_REGION }}
    EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }} 
    MONGODB_URI: ${{ secrets.MONGODB_URI }}
    SECRET_KEY: ${{ secrets.SECRET_KEY }}
    
jobs:
    build-push-deploy:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Log in to Docker Hub
          run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

        - name: Build Docker image
          run: |
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG .

        - name: Push Docker image
          run: |
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Update kubeconfig to connect to EKS
          run: |
            aws eks update-kubeconfig \
            --name ${{ secrets.EKS_CLUSTER_NAME }} \
            --region ${{ secrets.AWS_REGION }}
            
        - name: Replace environment variables in manifest

          run: |
            envsubst < tasky-deployment.template.yaml > tasky-deployment.yaml
        - name: Deploy to EKS
          run: |
            kubectl apply -f tasky-deployment.yaml
            kubectl apply -f tasky-serviceaccount.yaml
            kubectl apply -f tasky-clusterrolebinding.yaml
            kubectl rollout restart deployment tasky
            kubectl get pods -l app=tasky
            kubectl get svc tasky
            kubectl get deployment tasky
            kubectl get service tasky
            kubectl describe deployment tasky
